/*
Instruction:

You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.

*/ 

/*  
*/

//  My Solution

/*
 * @param {string} s
 * @param {string} t
 * @return {character}
 */
var findTheDifference = function(s, t) {
    for ( let i = 0; i < s.length; i++){
        t = t.replace(s[i], '');
    }
    return t;
};

//  LeetCode - Fastest Runtime

//  What I thought I could do using reduce method
var findTheDifference = function(s, t) {
    const sum1 = s.split('').reduce((acc, cur) => acc + cur.charCodeAt(0), 0);
    const sum2 = t.split('').reduce((acc, cur) => acc + cur.charCodeAt(0), 0);
    return String.fromCharCode(sum2 - sum1);
  };

//  LeetCode - Lowest Memory Usage

var findTheDifference = function (s, t) {
    let result = 0;
    for (let i = 0; i < s.length; i++) {
        result ^= s.charCodeAt(i);
    }
    for (let i = 0; i < t.length; i++) {
        result ^= t.charCodeAt(i);
    }

    return String.fromCharCode(result);
};